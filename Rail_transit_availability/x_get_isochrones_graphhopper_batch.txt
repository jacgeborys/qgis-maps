import requests
import geopandas as gpd
from shapely.geometry import shape

# Load tram stops from GeoJSON file
file_path = r"C:\Users\Asus\OneDrive\Pulpit\Rozne\QGIS\Git\Rail_transit_availability\SHP\temp.shp"
tram_stops = gpd.read_file(file_path)

# Your GraphHopper API key
api_key = "ee1d380a-fa18-4168-992c-59cb7702875d"

# Collect all points
points = [[stop.geometry.y, stop.geometry.x] for index, stop in tram_stops.iterrows()]

# Construct the points part of the query string
points_query = '&'.join([f'point={lat},{lon}' for lat, lon in points])

# API URL for isochrone with multiple points
url = f"https://graphhopper.com/api/1/isochrone?{points_query}&time_limit=460&vehicle=foot&key={api_key}"

# Make the GET request
response = requests.get(url)

if response.status_code == 200:
    # Extract isochrone polygon data
    isochrone_data = response.json()
    isochrone_polygons = []
    for polygon in isochrone_data['polygons']:
        # Convert GeoJSON to Shapely geometry and then to WKT
        shapely_geom = shape(polygon['geometry'])
        wkt_geom = shapely_geom.wkt
        isochrone_polygons.append(wkt_geom)
    
    # Convert isochrone polygons to GeoDataFrame
    isochrone_gdf = gpd.GeoDataFrame(geometry=gpd.GeoSeries.from_wkt(isochrone_polygons))
    
    # Save the GeoDataFrame to a new file
    output_file_path = r"C:\Users\Asus\OneDrive\Pulpit\Rozne\QGIS\Git\Rail_transit_availability\SHP\isochrones_temp.shp"
    isochrone_gdf.to_file(output_file_path)
else:
    print(f"Error: {response.text}")